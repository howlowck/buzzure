name: 'Infrastructure'

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      ARM_THREEPOINTZERO_BETA_RESOURCES: 'true'
    runs-on: ubuntu-latest
    environment: prod

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - run: >-
          terraform init
          -backend-config="storage_account_name=${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }}"
          -backend-config="container_name=${{ secrets.TF_BACKEND_STORAGE_CONTAINER }}"
          -backend-config="key=${{ secrets.TF_BACKEND_STORAGE_KEY }}"
          -backend-config="resource_group_name=${{ secrets.TF_BACKEND_STORAGE_RESOURCE_GROUP }}"

      - name: 'Terraform Validate'
        uses: hashicorp/setup-terraform@v1
        with:
          tf_actions_version: 0.14.8
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: './terraform'

      - name: 'Terraform Plan'
        uses: hashicorp/setup-terraform@v1
        with:
          tf_actions_version: 0.14.8
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: './terraform'

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main'
      #   uses: hashicorp/setup-terraform@v1
      #   with:
      #     tf_actions_version: 0.14.8
      #     tf_actions_subcommand: 'applya'
      #     tf_actions_working_dir: './terraform'
